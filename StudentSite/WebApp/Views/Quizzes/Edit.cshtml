@using App.Domain
@model WebApp.ViewModels.QuizzesCreateEditVM


@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Quiz</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Quiz.Name" class="control-label"></label>
                <input asp-for="Quiz.Name" class="form-control" />
                <span asp-validation-for="Quiz.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quiz.Description" class="control-label"></label>
                <input asp-for="Quiz.Description" class="form-control" />
                <span asp-validation-for="Quiz.Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Quiz.IsReady" /> @Html.DisplayNameFor(model => model.Quiz.IsReady)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Quiz.SubjectId" class="control-label"></label>
                <select asp-for="Quiz.SubjectId" class ="form-control" asp-items="Model!.SubjectSelectList"></select>
            </div>
            @foreach (var item in Model?.SubjectSelectList!)
            {
                <h1>@item.Value</h1>
            }
            <h1>@Model.Quiz.Id</h1>
            <input type="hidden" asp-for="Quiz.Id" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
